<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="freelanceplatform.controllers.TaskControllerTest" time="12.944" tests="23" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="22"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/stanislavkovalcuk/test/FreelancePlatform/target/test-classes:/Users/stanislavkovalcuk/test/FreelancePlatform/target/classes:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.4/spring-boot-starter-data-jpa-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.4/spring-boot-starter-aop-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/aspectj/aspectjweaver/1.9.21/aspectjweaver-1.9.21.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.4/spring-boot-starter-jdbc-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-jdbc/6.1.5/spring-jdbc-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/hibernate/orm/hibernate-core/6.4.4.Final/hibernate-core-6.4.4.Final.jar:/Users/stanislavkovalcuk/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/stanislavkovalcuk/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/Users/stanislavkovalcuk/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/Users/stanislavkovalcuk/.m2/repository/net/bytebuddy/byte-buddy/1.14.12/byte-buddy-1.14.12.jar:/Users/stanislavkovalcuk/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/stanislavkovalcuk/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/stanislavkovalcuk/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/data/spring-data-jpa/3.2.4/spring-data-jpa-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/data/spring-data-commons/3.2.4/spring-data-commons-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-orm/6.1.5/spring-orm-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-beans/6.1.5/spring-beans-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/slf4j/slf4j-api/2.0.12/slf4j-api-2.0.12.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-aspects/6.1.5/spring-aspects-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.2.4/spring-boot-starter-security-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.4/spring-boot-starter-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.4/spring-boot-starter-logging-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/slf4j/jul-to-slf4j/2.0.12/jul-to-slf4j-2.0.12.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-aop/6.1.5/spring-aop-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/security/spring-security-config/6.2.3/spring-security-config-6.2.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/security/spring-security-web/6.2.3/spring-security-web-6.2.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-expression/6.1.5/spring-expression-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.4/spring-boot-starter-web-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.4/spring-boot-starter-json-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.4/jackson-databind-2.15.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.4/jackson-annotations-2.15.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.4/jackson-core-2.15.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.4/jackson-datatype-jdk8-2.15.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.4/jackson-datatype-jsr310-2.15.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.4/jackson-module-parameter-names-2.15.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.4/spring-boot-starter-tomcat-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.19/tomcat-embed-core-10.1.19.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.19/tomcat-embed-el-10.1.19.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.19/tomcat-embed-websocket-10.1.19.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-web/6.1.5/spring-web-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-webmvc/6.1.5/spring-webmvc-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/kafka/spring-kafka/3.1.3/spring-kafka-3.1.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-context/6.1.5/spring-context-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-messaging/6.1.5/spring-messaging-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-tx/6.1.5/spring-tx-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/retry/spring-retry/2.0.5/spring-retry-2.0.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-clients/3.6.1/kafka-clients-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/com/github/luben/zstd-jni/1.5.5-1/zstd-jni-1.5.5-1.jar:/Users/stanislavkovalcuk/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/xerial/snappy/snappy-java/1.1.10.5/snappy-java-1.1.10.5.jar:/Users/stanislavkovalcuk/.m2/repository/io/micrometer/micrometer-observation/1.12.4/micrometer-observation-1.12.4.jar:/Users/stanislavkovalcuk/.m2/repository/io/micrometer/micrometer-commons/1.12.4/micrometer-commons-1.12.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/liquibase/liquibase-core/4.24.0/liquibase-core-4.24.0.jar:/Users/stanislavkovalcuk/.m2/repository/com/opencsv/opencsv/5.8/opencsv-5.8.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/commons/commons-lang3/3.13.0/commons-lang3-3.13.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/commons/commons-text/1.10.0/commons-text-1.10.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/Users/stanislavkovalcuk/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-devtools/3.2.4/spring-boot-devtools-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot/3.2.4/spring-boot-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.4/spring-boot-autoconfigure-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.2.4/spring-boot-starter-cache-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-context-support/6.1.5/spring-context-support-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/com/hazelcast/hazelcast-spring/5.3.6/hazelcast-spring-5.3.6.jar:/Users/stanislavkovalcuk/.m2/repository/com/hazelcast/hazelcast/5.3.6/hazelcast-5.3.6.jar:/Users/stanislavkovalcuk/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/Users/stanislavkovalcuk/.m2/repository/org/testcontainers/postgresql/1.19.7/postgresql-1.19.7.jar:/Users/stanislavkovalcuk/.m2/repository/org/testcontainers/jdbc/1.19.7/jdbc-1.19.7.jar:/Users/stanislavkovalcuk/.m2/repository/org/testcontainers/database-commons/1.19.7/database-commons-1.19.7.jar:/Users/stanislavkovalcuk/.m2/repository/org/testcontainers/testcontainers/1.19.7/testcontainers-1.19.7.jar:/Users/stanislavkovalcuk/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/commons/commons-compress/1.24.0/commons-compress-1.24.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/rnorth/duct-tape/duct-tape/1.0.8/duct-tape-1.0.8.jar:/Users/stanislavkovalcuk/.m2/repository/org/jetbrains/annotations/17.0.0/annotations-17.0.0.jar:/Users/stanislavkovalcuk/.m2/repository/com/github/docker-java/docker-java-api/3.3.6/docker-java-api-3.3.6.jar:/Users/stanislavkovalcuk/.m2/repository/com/github/docker-java/docker-java-transport-zerodep/3.3.6/docker-java-transport-zerodep-3.3.6.jar:/Users/stanislavkovalcuk/.m2/repository/com/github/docker-java/docker-java-transport/3.3.6/docker-java-transport-3.3.6.jar:/Users/stanislavkovalcuk/.m2/repository/net/java/dev/jna/jna/5.13.0/jna-5.13.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/postgresql/postgresql/42.6.2/postgresql-42.6.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.4/spring-boot-starter-test-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-test/3.2.4/spring-boot-test-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.4/spring-boot-test-autoconfigure-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/stanislavkovalcuk/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/stanislavkovalcuk/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/stanislavkovalcuk/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/Users/stanislavkovalcuk/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.2/junit-jupiter-params-5.10.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/Users/stanislavkovalcuk/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.12/byte-buddy-agent-1.14.12.jar:/Users/stanislavkovalcuk/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/stanislavkovalcuk/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-core/6.1.5/spring-core-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-jcl/6.1.5/spring-jcl-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-test/6.1.5/spring-test-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/kafka/spring-kafka-test/3.1.3/spring-kafka-test-3.1.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/zookeeper/zookeeper/3.8.4/zookeeper-3.8.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.8.4/zookeeper-jute-3.8.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-handler/4.1.107.Final/netty-handler-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-common/4.1.107.Final/netty-common-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-resolver/4.1.107.Final/netty-resolver-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-buffer/4.1.107.Final/netty-buffer-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-transport/4.1.107.Final/netty-transport-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.107.Final/netty-transport-native-unix-common-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-codec/4.1.107.Final/netty-codec-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-transport-native-epoll/4.1.107.Final/netty-transport-native-epoll-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.107.Final/netty-transport-classes-epoll-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/Users/stanislavkovalcuk/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/Users/stanislavkovalcuk/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-clients/3.6.1/kafka-clients-3.6.1-test.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-metadata/3.6.1/kafka-metadata-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-raft/3.6.1/kafka-raft-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/com/yammer/metrics/metrics-core/2.2.0/metrics-core-2.2.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-server-common/3.6.1/kafka-server-common-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/pcollections/pcollections/4.0.1/pcollections-4.0.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-server-common/3.6.1/kafka-server-common-3.6.1-test.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-streams-test-utils/3.6.1/kafka-streams-test-utils-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-streams/3.6.1/kafka-streams-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/rocksdb/rocksdbjni/7.9.2/rocksdbjni-7.9.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka_2.13/3.6.1/kafka_2.13-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/scala-lang/scala-library/2.13.11/scala-library-2.13.11.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-group-coordinator/3.6.1/kafka-group-coordinator-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-storage-api/3.6.1/kafka-storage-api-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-tools-api/3.6.1/kafka-tools-api-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-storage/3.6.1/kafka-storage-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/com/github/ben-manes/caffeine/caffeine/3.1.8/caffeine-3.1.8.jar:/Users/stanislavkovalcuk/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/Users/stanislavkovalcuk/.m2/repository/net/sourceforge/argparse4j/argparse4j/0.7.0/argparse4j-0.7.0.jar:/Users/stanislavkovalcuk/.m2/repository/commons-validator/commons-validator/1.7/commons-validator-1.7.jar:/Users/stanislavkovalcuk/.m2/repository/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar:/Users/stanislavkovalcuk/.m2/repository/commons-digester/commons-digester/2.1/commons-digester-2.1.jar:/Users/stanislavkovalcuk/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/jackson/module/jackson-module-scala_2.13/2.15.4/jackson-module-scala_2.13-2.15.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-csv/2.15.4/jackson-dataformat-csv-2.15.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/bitbucket/b_c/jose4j/0.9.3/jose4j-0.9.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/scala-lang/modules/scala-collection-compat_2.13/2.10.0/scala-collection-compat_2.13-2.10.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/scala-lang/modules/scala-java8-compat_2.13/1.0.2/scala-java8-compat_2.13-1.0.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/scala-lang/scala-reflect/2.13.11/scala-reflect-2.13.11.jar:/Users/stanislavkovalcuk/.m2/repository/com/typesafe/scala-logging/scala-logging_2.13/3.9.4/scala-logging_2.13-3.9.4.jar:/Users/stanislavkovalcuk/.m2/repository/io/dropwizard/metrics/metrics-core/4.2.25/metrics-core-4.2.25.jar:/Users/stanislavkovalcuk/.m2/repository/commons-cli/commons-cli/1.4/commons-cli-1.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka_2.13/3.6.1/kafka_2.13-3.6.1-test.jar:/Users/stanislavkovalcuk/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.2/junit-jupiter-api-5.10.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/junit/platform/junit-platform-commons/1.10.2/junit-platform-commons-1.10.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/junit/platform/junit-platform-launcher/1.10.2/junit-platform-launcher-1.10.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/junit/platform/junit-platform-engine/1.10.2/junit-platform-engine-1.10.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/security/spring-security-test/6.2.3/spring-security-test-6.2.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/security/spring-security-core/6.2.3/spring-security-core-6.2.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/security/spring-security-crypto/6.2.3/spring-security-crypto-6.2.3.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Prague"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="22"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="CZ"/>
    <property name="sun.boot.library.path" value="/Users/stanislavkovalcuk/Library/Java/JavaVirtualMachines/openjdk-22.0.1/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/stanislavkovalcuk/test/FreelancePlatform/target/surefire/surefirebooter-20240627155548165_3.jar /Users/stanislavkovalcuk/test/FreelancePlatform/target/surefire 2024-06-27T15-55-48_127-jvmRun1 surefire-20240627155548165_1tmp surefire_0-20240627155548165_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/stanislavkovalcuk/test/FreelancePlatform/target/test-classes:/Users/stanislavkovalcuk/test/FreelancePlatform/target/classes:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.4/spring-boot-starter-data-jpa-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.4/spring-boot-starter-aop-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/aspectj/aspectjweaver/1.9.21/aspectjweaver-1.9.21.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.4/spring-boot-starter-jdbc-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-jdbc/6.1.5/spring-jdbc-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/hibernate/orm/hibernate-core/6.4.4.Final/hibernate-core-6.4.4.Final.jar:/Users/stanislavkovalcuk/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/stanislavkovalcuk/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/Users/stanislavkovalcuk/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/Users/stanislavkovalcuk/.m2/repository/net/bytebuddy/byte-buddy/1.14.12/byte-buddy-1.14.12.jar:/Users/stanislavkovalcuk/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/stanislavkovalcuk/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/stanislavkovalcuk/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/data/spring-data-jpa/3.2.4/spring-data-jpa-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/data/spring-data-commons/3.2.4/spring-data-commons-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-orm/6.1.5/spring-orm-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-beans/6.1.5/spring-beans-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/slf4j/slf4j-api/2.0.12/slf4j-api-2.0.12.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-aspects/6.1.5/spring-aspects-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.2.4/spring-boot-starter-security-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.4/spring-boot-starter-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.4/spring-boot-starter-logging-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/slf4j/jul-to-slf4j/2.0.12/jul-to-slf4j-2.0.12.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-aop/6.1.5/spring-aop-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/security/spring-security-config/6.2.3/spring-security-config-6.2.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/security/spring-security-web/6.2.3/spring-security-web-6.2.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-expression/6.1.5/spring-expression-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.4/spring-boot-starter-web-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.4/spring-boot-starter-json-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.4/jackson-databind-2.15.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.4/jackson-annotations-2.15.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.4/jackson-core-2.15.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.4/jackson-datatype-jdk8-2.15.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.4/jackson-datatype-jsr310-2.15.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.4/jackson-module-parameter-names-2.15.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.4/spring-boot-starter-tomcat-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.19/tomcat-embed-core-10.1.19.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.19/tomcat-embed-el-10.1.19.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.19/tomcat-embed-websocket-10.1.19.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-web/6.1.5/spring-web-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-webmvc/6.1.5/spring-webmvc-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/kafka/spring-kafka/3.1.3/spring-kafka-3.1.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-context/6.1.5/spring-context-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-messaging/6.1.5/spring-messaging-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-tx/6.1.5/spring-tx-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/retry/spring-retry/2.0.5/spring-retry-2.0.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-clients/3.6.1/kafka-clients-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/com/github/luben/zstd-jni/1.5.5-1/zstd-jni-1.5.5-1.jar:/Users/stanislavkovalcuk/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/xerial/snappy/snappy-java/1.1.10.5/snappy-java-1.1.10.5.jar:/Users/stanislavkovalcuk/.m2/repository/io/micrometer/micrometer-observation/1.12.4/micrometer-observation-1.12.4.jar:/Users/stanislavkovalcuk/.m2/repository/io/micrometer/micrometer-commons/1.12.4/micrometer-commons-1.12.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/liquibase/liquibase-core/4.24.0/liquibase-core-4.24.0.jar:/Users/stanislavkovalcuk/.m2/repository/com/opencsv/opencsv/5.8/opencsv-5.8.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/commons/commons-lang3/3.13.0/commons-lang3-3.13.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/commons/commons-text/1.10.0/commons-text-1.10.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/Users/stanislavkovalcuk/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-devtools/3.2.4/spring-boot-devtools-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot/3.2.4/spring-boot-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.4/spring-boot-autoconfigure-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.2.4/spring-boot-starter-cache-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-context-support/6.1.5/spring-context-support-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/com/hazelcast/hazelcast-spring/5.3.6/hazelcast-spring-5.3.6.jar:/Users/stanislavkovalcuk/.m2/repository/com/hazelcast/hazelcast/5.3.6/hazelcast-5.3.6.jar:/Users/stanislavkovalcuk/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/Users/stanislavkovalcuk/.m2/repository/org/testcontainers/postgresql/1.19.7/postgresql-1.19.7.jar:/Users/stanislavkovalcuk/.m2/repository/org/testcontainers/jdbc/1.19.7/jdbc-1.19.7.jar:/Users/stanislavkovalcuk/.m2/repository/org/testcontainers/database-commons/1.19.7/database-commons-1.19.7.jar:/Users/stanislavkovalcuk/.m2/repository/org/testcontainers/testcontainers/1.19.7/testcontainers-1.19.7.jar:/Users/stanislavkovalcuk/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/commons/commons-compress/1.24.0/commons-compress-1.24.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/rnorth/duct-tape/duct-tape/1.0.8/duct-tape-1.0.8.jar:/Users/stanislavkovalcuk/.m2/repository/org/jetbrains/annotations/17.0.0/annotations-17.0.0.jar:/Users/stanislavkovalcuk/.m2/repository/com/github/docker-java/docker-java-api/3.3.6/docker-java-api-3.3.6.jar:/Users/stanislavkovalcuk/.m2/repository/com/github/docker-java/docker-java-transport-zerodep/3.3.6/docker-java-transport-zerodep-3.3.6.jar:/Users/stanislavkovalcuk/.m2/repository/com/github/docker-java/docker-java-transport/3.3.6/docker-java-transport-3.3.6.jar:/Users/stanislavkovalcuk/.m2/repository/net/java/dev/jna/jna/5.13.0/jna-5.13.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/postgresql/postgresql/42.6.2/postgresql-42.6.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.4/spring-boot-starter-test-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-test/3.2.4/spring-boot-test-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.4/spring-boot-test-autoconfigure-3.2.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/stanislavkovalcuk/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/stanislavkovalcuk/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/stanislavkovalcuk/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/Users/stanislavkovalcuk/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.2/junit-jupiter-params-5.10.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/Users/stanislavkovalcuk/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.12/byte-buddy-agent-1.14.12.jar:/Users/stanislavkovalcuk/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/stanislavkovalcuk/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-core/6.1.5/spring-core-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-jcl/6.1.5/spring-jcl-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/spring-test/6.1.5/spring-test-6.1.5.jar:/Users/stanislavkovalcuk/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/kafka/spring-kafka-test/3.1.3/spring-kafka-test-3.1.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/zookeeper/zookeeper/3.8.4/zookeeper-3.8.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.8.4/zookeeper-jute-3.8.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-handler/4.1.107.Final/netty-handler-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-common/4.1.107.Final/netty-common-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-resolver/4.1.107.Final/netty-resolver-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-buffer/4.1.107.Final/netty-buffer-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-transport/4.1.107.Final/netty-transport-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.107.Final/netty-transport-native-unix-common-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-codec/4.1.107.Final/netty-codec-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-transport-native-epoll/4.1.107.Final/netty-transport-native-epoll-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.107.Final/netty-transport-classes-epoll-4.1.107.Final.jar:/Users/stanislavkovalcuk/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/Users/stanislavkovalcuk/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/Users/stanislavkovalcuk/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-clients/3.6.1/kafka-clients-3.6.1-test.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-metadata/3.6.1/kafka-metadata-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-raft/3.6.1/kafka-raft-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/com/yammer/metrics/metrics-core/2.2.0/metrics-core-2.2.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-server-common/3.6.1/kafka-server-common-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/pcollections/pcollections/4.0.1/pcollections-4.0.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-server-common/3.6.1/kafka-server-common-3.6.1-test.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-streams-test-utils/3.6.1/kafka-streams-test-utils-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-streams/3.6.1/kafka-streams-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/rocksdb/rocksdbjni/7.9.2/rocksdbjni-7.9.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka_2.13/3.6.1/kafka_2.13-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/scala-lang/scala-library/2.13.11/scala-library-2.13.11.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-group-coordinator/3.6.1/kafka-group-coordinator-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-storage-api/3.6.1/kafka-storage-api-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-tools-api/3.6.1/kafka-tools-api-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka-storage/3.6.1/kafka-storage-3.6.1.jar:/Users/stanislavkovalcuk/.m2/repository/com/github/ben-manes/caffeine/caffeine/3.1.8/caffeine-3.1.8.jar:/Users/stanislavkovalcuk/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/Users/stanislavkovalcuk/.m2/repository/net/sourceforge/argparse4j/argparse4j/0.7.0/argparse4j-0.7.0.jar:/Users/stanislavkovalcuk/.m2/repository/commons-validator/commons-validator/1.7/commons-validator-1.7.jar:/Users/stanislavkovalcuk/.m2/repository/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar:/Users/stanislavkovalcuk/.m2/repository/commons-digester/commons-digester/2.1/commons-digester-2.1.jar:/Users/stanislavkovalcuk/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/jackson/module/jackson-module-scala_2.13/2.15.4/jackson-module-scala_2.13-2.15.4.jar:/Users/stanislavkovalcuk/.m2/repository/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar:/Users/stanislavkovalcuk/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-csv/2.15.4/jackson-dataformat-csv-2.15.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/bitbucket/b_c/jose4j/0.9.3/jose4j-0.9.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/scala-lang/modules/scala-collection-compat_2.13/2.10.0/scala-collection-compat_2.13-2.10.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/scala-lang/modules/scala-java8-compat_2.13/1.0.2/scala-java8-compat_2.13-1.0.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/scala-lang/scala-reflect/2.13.11/scala-reflect-2.13.11.jar:/Users/stanislavkovalcuk/.m2/repository/com/typesafe/scala-logging/scala-logging_2.13/3.9.4/scala-logging_2.13-3.9.4.jar:/Users/stanislavkovalcuk/.m2/repository/io/dropwizard/metrics/metrics-core/4.2.25/metrics-core-4.2.25.jar:/Users/stanislavkovalcuk/.m2/repository/commons-cli/commons-cli/1.4/commons-cli-1.4.jar:/Users/stanislavkovalcuk/.m2/repository/org/apache/kafka/kafka_2.13/3.6.1/kafka_2.13-3.6.1-test.jar:/Users/stanislavkovalcuk/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.2/junit-jupiter-api-5.10.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/stanislavkovalcuk/.m2/repository/org/junit/platform/junit-platform-commons/1.10.2/junit-platform-commons-1.10.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/junit/platform/junit-platform-launcher/1.10.2/junit-platform-launcher-1.10.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/junit/platform/junit-platform-engine/1.10.2/junit-platform-engine-1.10.2.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/security/spring-security-test/6.2.3/spring-security-test-6.2.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/security/spring-security-core/6.2.3/spring-security-core-6.2.3.jar:/Users/stanislavkovalcuk/.m2/repository/org/springframework/security/spring-security-crypto/6.2.3/spring-security-crypto-6.2.3.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/stanislavkovalcuk"/>
    <property name="user.language" value="ru"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-04-16"/>
    <property name="java.home" value="/Users/stanislavkovalcuk/Library/Java/JavaVirtualMachines/openjdk-22.0.1/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/stanislavkovalcuk/test/FreelancePlatform"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/stanislavkovalcuk/test/FreelancePlatform/target/surefire/surefirebooter-20240627155548165_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="22.0.1+8-16"/>
    <property name="user.name" value="stanislavkovalcuk"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="14.5"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/Users/stanislavkovalcuk/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/var/folders/rf/_269314s3_l36m44g36whcx80000gn/T/"/>
    <property name="idea.version" value="2022.3.2"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="22.0.1"/>
    <property name="user.dir" value="/Users/stanislavkovalcuk/test/FreelancePlatform"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="36935"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/stanislavkovalcuk/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="22.0.1+8-16"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="66.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[FreelancePlatform] "/>
  </properties>
  <testcase name="deleteByGuestReturnsStatusForbidden" classname="freelanceplatform.controllers.TaskControllerTest" time="0.351">
    <system-out><![CDATA[15:55:49.603 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [freelanceplatform.controllers.TaskControllerTest]: TaskControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:55:49.654 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration freelanceplatform.FreelancePlatformApplication for test class freelanceplatform.controllers.TaskControllerTest
15:55:49.693 [main] INFO org.testcontainers.images.PullPolicy -- Image pull policy will be performed by: DefaultPullPolicy()
15:55:49.694 [main] INFO org.testcontainers.utility.ImageNameSubstitutor -- Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
15:55:49.797 [main] INFO org.testcontainers.dockerclient.DockerClientProviderStrategy -- Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
15:55:50.152 [main] INFO org.testcontainers.dockerclient.DockerClientProviderStrategy -- Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
15:55:50.153 [main] INFO org.testcontainers.DockerClientFactory -- Docker host IP address is localhost
15:55:50.168 [main] INFO org.testcontainers.DockerClientFactory -- Connected to docker: 
  Server Version: 25.0.3
  API Version: 1.44
  Operating System: Docker Desktop
  Total Memory: 7841 MB
15:55:50.183 [main] INFO tc.testcontainers/ryuk:0.6.0 -- Creating container for image: testcontainers/ryuk:0.6.0
15:55:50.348 [main] INFO org.testcontainers.utility.RegistryAuthLocator -- Credential helper/store (docker-credential-desktop) does not have credentials for https://index.docker.io/v1/
15:55:50.440 [main] INFO tc.testcontainers/ryuk:0.6.0 -- Container testcontainers/ryuk:0.6.0 is starting: ecfbe0500e1d1c8eb78e732ca0adf8bdb2e2adf8438ae201e2e98baf246e1a52
15:55:50.826 [main] INFO tc.testcontainers/ryuk:0.6.0 -- Container testcontainers/ryuk:0.6.0 started in PT0.643591S
15:55:50.834 [main] INFO org.testcontainers.utility.RyukResourceReaper -- Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
15:55:50.835 [main] INFO org.testcontainers.DockerClientFactory -- Checking the system...
15:55:50.835 [main] INFO org.testcontainers.DockerClientFactory -- ✔︎ Docker server version should be at least 1.6.0
15:55:50.835 [main] INFO tc.postgres:16-alpine -- Creating container for image: postgres:16-alpine
15:55:50.864 [main] INFO tc.postgres:16-alpine -- Container postgres:16-alpine is starting: 3ea49a6f1cbb51811189944639b9a88e44535410e5a5b6835810ad74523d2836
15:55:51.887 [main] INFO tc.postgres:16-alpine -- Container postgres:16-alpine started in PT1.051536S
15:55:51.888 [main] INFO tc.postgres:16-alpine -- Container is started (JDBC URL: jdbc:postgresql://localhost:59186/test?loggerLevel=OFF)
15:55:51.925 [main] INFO org.springframework.boot.devtools.restart.RestartApplicationListener -- Restart disabled due to context in which it is running

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
&amp#27;[32m :: Spring Boot :: &amp#27;[39m              &amp#27;[2m (v3.2.4)&amp#27;[0;39m

&amp#27;[2m2024-06-27T15:55:52.095+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.controllers.TaskControllerTest        &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Starting TaskControllerTest using Java 22.0.1 with PID 36935 (started by stanislavkovalcuk in /Users/stanislavkovalcuk/test/FreelancePlatform)
&amp#27;[2m2024-06-27T15:55:52.095+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.controllers.TaskControllerTest        &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m No active profile set, falling back to 1 default profile: "default"
&amp#27;[2m2024-06-27T15:55:52.473+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36m.s.d.r.c.RepositoryConfigurationDelegate&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Bootstrapping Spring Data JPA repositories in DEFAULT mode.
&amp#27;[2m2024-06-27T15:55:52.504+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36m.s.d.r.c.RepositoryConfigurationDelegate&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Finished Spring Data repository scanning in 25 ms. Found 6 JPA repository interfaces.
&amp#27;[2m2024-06-27T15:55:52.809+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mc.h.i.config.AbstractConfigLocator      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Loading 'hazelcast.yaml' from the classpath.
&amp#27;[2m2024-06-27T15:55:52.960+02:00&amp#27;[0;39m &amp#27;[33m WARN&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mc.h.i.impl.HazelcastInstanceFactory     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Hazelcast is starting in a Java modular environment (Java 9 and newer) but without proper access to required Java packages. Use additional Java arguments to provide Hazelcast access to Java internal API. The internal API access is used to get the best performance results. Arguments to be used:
 --add-modules java.se --add-exports java.base/jdk.internal.ref=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.management/sun.management=ALL-UNNAMED --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED
&amp#27;[2m2024-06-27T15:55:53.010+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mcom.hazelcast.system.logo               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [192.168.68.1]:5701 [dev] [5.3.6] 
	+       +  o    o     o     o---o o----o o      o---o     o     o----o o--o--o
	+ +   + +  |    |    / \       /  |      |     /         / \    |         |   
	+ + + + +  o----o   o   o     o   o----o |    o         o   o   o----o    |   
	+ +   + +  |    |  /     \   /    |      |     \       /     \       |    |   
	+       +  o    o o       o o---o o----o o----o o---o o       o o----o    o   
&amp#27;[2m2024-06-27T15:55:53.010+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mcom.hazelcast.system                    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [192.168.68.1]:5701 [dev] [5.3.6] Copyright (c) 2008-2023, Hazelcast, Inc. All Rights Reserved.
&amp#27;[2m2024-06-27T15:55:53.010+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mcom.hazelcast.system                    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [192.168.68.1]:5701 [dev] [5.3.6] Hazelcast Platform 5.3.6 (20231109 - 9903dc9) starting at [192.168.68.1]:5701
&amp#27;[2m2024-06-27T15:55:53.010+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mcom.hazelcast.system                    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [192.168.68.1]:5701 [dev] [5.3.6] Cluster name: dev
&amp#27;[2m2024-06-27T15:55:53.010+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mcom.hazelcast.system                    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [192.168.68.1]:5701 [dev] [5.3.6] Integrity Checker is disabled. Fail-fast on corrupted executables will not be performed. For more information, see the documentation for Integrity Checker.
&amp#27;[2m2024-06-27T15:55:53.012+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mcom.hazelcast.system                    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [192.168.68.1]:5701 [dev] [5.3.6] The Jet engine is disabled.
To enable the Jet engine on the members, do one of the following:
  - Change member config using Java API: config.getJetConfig().setEnabled(true)
  - Change XML/YAML configuration property: Set hazelcast.jet.enabled to true
  - Add system property: -Dhz.jet.enabled=true (for Hazelcast embedded, works only when loading config via Config.load)
  - Add environment variable: HZ_JET_ENABLED=true (recommended when running container image. For Hazelcast embedded, works only when loading config via Config.load)
&amp#27;[2m2024-06-27T15:55:53.090+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mc.h.internal.tpc.TpcServerBootstrap     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [192.168.68.1]:5701 [dev] [5.3.6] TPC: disabled
&amp#27;[2m2024-06-27T15:55:53.201+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mcom.hazelcast.system.security           &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [192.168.68.1]:5701 [dev] [5.3.6] Enable DEBUG/FINE log level for log category com.hazelcast.system.security  or use -Dhazelcast.security.recommendations system property to see 🔒 security recommendations and the status of current config.
&amp#27;[2m2024-06-27T15:55:53.237+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mcom.hazelcast.instance.impl.Node        &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [192.168.68.1]:5701 [dev] [5.3.6] Using Multicast discovery
&amp#27;[2m2024-06-27T15:55:53.238+02:00&amp#27;[0;39m &amp#27;[33m WARN&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mcom.hazelcast.cp.CPSubsystem            &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [192.168.68.1]:5701 [dev] [5.3.6] CP Subsystem is not enabled. CP data structures will operate in UNSAFE mode! Please note that UNSAFE mode will not provide strong consistency guarantees.
&amp#27;[2m2024-06-27T15:55:53.393+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mc.h.internal.diagnostics.Diagnostics    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [192.168.68.1]:5701 [dev] [5.3.6] Diagnostics disabled. To enable add -Dhazelcast.diagnostics.enabled=true to the JVM arguments.
&amp#27;[2m2024-06-27T15:55:53.396+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mcom.hazelcast.core.LifecycleService     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [192.168.68.1]:5701 [dev] [5.3.6] [192.168.68.1]:5701 is STARTING
&amp#27;[2m2024-06-27T15:55:55.333+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mc.h.internal.cluster.ClusterService     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [192.168.68.1]:5701 [dev] [5.3.6] 

Members {size:1, ver:1} [
	Member [192.168.68.1]:5701 - 0db599ab-7c36-475d-a877-2c30acc141b3 this
]

&amp#27;[2m2024-06-27T15:55:55.348+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mcom.hazelcast.core.LifecycleService     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [192.168.68.1]:5701 [dev] [5.3.6] [192.168.68.1]:5701 is STARTED
&amp#27;[2m2024-06-27T15:55:55.433+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mcom.zaxxer.hikari.HikariDataSource      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HikariPool-1 - Starting...
&amp#27;[2m2024-06-27T15:55:55.552+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mcom.zaxxer.hikari.pool.HikariPool       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2a654f27
&amp#27;[2m2024-06-27T15:55:55.552+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mcom.zaxxer.hikari.HikariDataSource      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HikariPool-1 - Start completed.
&amp#27;[2m2024-06-27T15:55:55.641+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.database                      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Set default schema name to public
&amp#27;[2m2024-06-27T15:55:55.722+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.changelog                     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Creating database history table with name: public.databasechangelog
&amp#27;[2m2024-06-27T15:55:55.739+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.changelog                     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Reading from public.databasechangelog
&amp#27;[2m2024-06-27T15:55:55.788+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.lockservice                   &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Successfully acquired change log lock
&amp#27;[2m2024-06-27T15:55:55.798+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.command                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Using deploymentId: 9496555798
&amp#27;[2m2024-06-27T15:55:55.811+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.changelog                     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Reading from public.databasechangelog
Running Changeset: db/changelog/db.changelog-1.0.sql::raw::includeAll
&amp#27;[2m2024-06-27T15:55:55.872+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.changelog                     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Custom SQL executed
&amp#27;[2m2024-06-27T15:55:55.873+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.changelog                     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m ChangeSet db/changelog/db.changelog-1.0.sql::raw::includeAll ran successfully in 45ms
Running Changeset: db/changelog/db.changelog-1.1.sql::raw::includeAll
&amp#27;[2m2024-06-27T15:55:55.886+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.changelog                     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Custom SQL executed
&amp#27;[2m2024-06-27T15:55:55.887+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.changelog                     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m ChangeSet db/changelog/db.changelog-1.1.sql::raw::includeAll ran successfully in 9ms
Running Changeset: db/changelog/db.changelog-2.0.sql::raw::includeAll
&amp#27;[2m2024-06-27T15:55:55.892+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.changelog                     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Custom SQL executed
&amp#27;[2m2024-06-27T15:55:55.893+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.changelog                     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m ChangeSet db/changelog/db.changelog-2.0.sql::raw::includeAll ran successfully in 4ms
&amp#27;[2m2024-06-27T15:55:55.897+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.util                          &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m UPDATE SUMMARY
&amp#27;[2m2024-06-27T15:55:55.897+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.util                          &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Run:                          3
&amp#27;[2m2024-06-27T15:55:55.897+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.util                          &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Previously run:               0
&amp#27;[2m2024-06-27T15:55:55.897+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.util                          &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Filtered out:                 0
&amp#27;[2m2024-06-27T15:55:55.897+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.util                          &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m -------------------------------
&amp#27;[2m2024-06-27T15:55:55.897+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.util                          &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Total change sets:            3
&amp#27;[2m2024-06-27T15:55:55.897+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.util                          &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Update summary generated
&amp#27;[2m2024-06-27T15:55:55.898+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.command                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Update command completed successfully.
Liquibase: Update has been successful. Rows affected: 16
&amp#27;[2m2024-06-27T15:55:55.902+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.lockservice                   &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Successfully released change log lock
&amp#27;[2m2024-06-27T15:55:55.902+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mliquibase.command                       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Command execution complete
&amp#27;[2m2024-06-27T15:55:55.955+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.hibernate.jpa.internal.util.LogHelper &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HHH000204: Processing PersistenceUnitInfo [name: default]
&amp#27;[2m2024-06-27T15:55:55.989+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36morg.hibernate.Version                   &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HHH000412: Hibernate ORM core version 6.4.4.Final
&amp#27;[2m2024-06-27T15:55:56.006+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.h.c.internal.RegionFactoryInitiator   &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HHH000026: Second-level cache disabled
&amp#27;[2m2024-06-27T15:55:56.061+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.s.o.j.p.SpringPersistenceUnitInfo     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m No LoadTimeWeaver setup: ignoring JPA class transformer
&amp#27;[2m2024-06-27T15:55:56.662+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.h.e.t.j.p.i.JtaPlatformInitiator      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
&amp#27;[2m2024-06-27T15:55:56.700+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mj.LocalContainerEntityManagerFactoryBean&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Initialized JPA EntityManagerFactory for persistence unit 'default'
&amp#27;[2m2024-06-27T15:55:56.982+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.s.d.j.r.query.QueryEnhancerFactory    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Hibernate is in classpath; If applicable, HQL parser will be used.
&amp#27;[2m2024-06-27T15:55:57.291+02:00&amp#27;[0;39m &amp#27;[33m WARN&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mJpaBaseConfiguration$JpaWebConfiguration&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
&amp#27;[2m2024-06-27T15:55:57.422+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.s.s.web.DefaultSecurityFilterChain    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5eee2617, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1bd851b4, org.springframework.security.web.context.SecurityContextHolderFilter@1dbd1049, org.springframework.security.web.header.HeaderWriterFilter@4cf6663b, org.springframework.web.filter.CorsFilter@6c6ea911, org.springframework.security.web.authentication.logout.LogoutFilter@63ca44ce, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@714bd7ad, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1d756c41, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77e7e759, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@509e3c03, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@269a73d6, org.springframework.security.web.access.ExceptionTranslationFilter@364cc95, org.springframework.security.web.access.intercept.AuthorizationFilter@1c31408f]
&amp#27;[2m2024-06-27T15:55:57.597+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.s.b.t.m.w.SpringBootMockServletContext&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Initializing Spring TestDispatcherServlet ''
&amp#27;[2m2024-06-27T15:55:57.598+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.s.t.web.servlet.TestDispatcherServlet &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Initializing Servlet ''
&amp#27;[2m2024-06-27T15:55:57.598+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.s.t.web.servlet.TestDispatcherServlet &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Completed initialization in 0 ms
&amp#27;[2m2024-06-27T15:55:57.613+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.a.k.clients.admin.AdminClientConfig   &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

&amp#27;[2m2024-06-27T15:55:57.644+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.a.kafka.common.utils.AppInfoParser    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Kafka version: 3.6.1
&amp#27;[2m2024-06-27T15:55:57.644+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.a.kafka.common.utils.AppInfoParser    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Kafka commitId: 5e3c2b738d253ff5
&amp#27;[2m2024-06-27T15:55:57.644+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.a.kafka.common.utils.AppInfoParser    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Kafka startTimeMs: 1719496557643
&amp#27;[2m2024-06-27T15:55:57.844+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [| adminclient-1]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.a.kafka.common.utils.AppInfoParser    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m App info kafka.admin.client for adminclient-1 unregistered
&amp#27;[2m2024-06-27T15:55:57.846+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [| adminclient-1]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.apache.kafka.common.metrics.Metrics   &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Metrics scheduler closed
&amp#27;[2m2024-06-27T15:55:57.846+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [| adminclient-1]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.apache.kafka.common.metrics.Metrics   &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Closing reporter org.apache.kafka.common.metrics.JmxReporter
&amp#27;[2m2024-06-27T15:55:57.846+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [| adminclient-1]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.apache.kafka.common.metrics.Metrics   &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Metrics reporters closed
&amp#27;[2m2024-06-27T15:55:57.856+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.controllers.TaskControllerTest        &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Started TaskControllerTest in 5.939 seconds (process running for 9.643)
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:58.039+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":6,"username":"username1620896274","firstName":"firstname-636898676","lastName":"lastname1993215608","email":"email-1774804433","password":"$2a$10$vIgScjSzBqgJyR16Ha7.9uDksuagY4b48rljG0pADwoEvb3jkTRIu","rating":0,"role":"ADMIN"}
&amp#27;[2m2024-06-27T15:55:58.046+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.a.k.clients.producer.ProducerConfig   &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

&amp#27;[2m2024-06-27T15:55:58.050+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.a.k.clients.producer.KafkaProducer    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [Producer clientId=producer-1] Instantiated an idempotent producer.
&amp#27;[2m2024-06-27T15:55:58.057+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.a.kafka.common.utils.AppInfoParser    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Kafka version: 3.6.1
&amp#27;[2m2024-06-27T15:55:58.057+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.a.kafka.common.utils.AppInfoParser    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Kafka commitId: 5e3c2b738d253ff5
&amp#27;[2m2024-06-27T15:55:58.057+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.a.kafka.common.utils.AppInfoParser    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Kafka startTimeMs: 1719496558057
&amp#27;[2m2024-06-27T15:55:58.073+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [ad | producer-1]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36morg.apache.kafka.clients.Metadata       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [Producer clientId=producer-1] Cluster ID: 9rOlTiCSROKoxA9VXJzbgA
&amp#27;[2m2024-06-27T15:55:58.076+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [ad | producer-1]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mo.a.k.c.p.internals.TransactionManager  &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [Producer clientId=producer-1] ProducerId set to 5043 with epoch 0
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:58.181+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":7,"username":"username920032242","firstName":"firstname-883395372","lastName":"lastname2089287587","email":"email-1794006009","password":"$2a$10$ko4dzFsBbjOdwwdwF.32b.UnmtiRxnZY2N8mWDE1.nVs03U/vpjMi","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:55:58.192+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][DELETE][/rest/tasks/posted/1][?&_psip=127.0.0.1]
]]></system-out>
  </testcase>
  <testcase name="assignFreelancerByGuestReturnsStatusForbidden" classname="freelanceplatform.controllers.TaskControllerTest" time="0.181">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:58.307+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":8,"username":"username939668880","firstName":"firstname46962069","lastName":"lastname-844883730","email":"email1794118893","password":"$2a$10$XTETRG/YjD8xqQJRV3LLYeGU9LDZskLceZXhWXHbnmYYB6/2sC7Ki","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:58.392+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":9,"username":"username1294695614","firstName":"firstname1566702433","lastName":"lastname1040689715","email":"email386353116","password":"$2a$10$broAJiS2mNioAMMkvBdVk.4gpOBNRG4AbQeJB5qI6XatVxZbbNs6S","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:55:58.393+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][POST][/rest/tasks/posted/1/proposals/1][?&_psip=127.0.0.1]
]]></system-out>
  </testcase>
  <testcase name="getAllTaskBoardReturnsTasksWithStatusUnassignedAndStatusOk" classname="freelanceplatform.controllers.TaskControllerTest" time="0.233">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:58.485+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":10,"username":"username1295383217","firstName":"firstname428171001","lastName":"lastname-562726253","email":"email-1870597398","password":"$2a$10$rWuX1WkQvlwwcQdbKhLyjecpdhVQwViSZFRFxnqOgaM7CEpr1Rm3S","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:58.566+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":11,"username":"username-1942333416","firstName":"firstname1903647680","lastName":"lastname-1578523063","email":"email-973218740","password":"$2a$10$7pavjIhH.tSvMFVDAHh5zuMMfqInGec85zBDKorht6Iy6mFi9m1yG","rating":0,"role":"USER"}
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:58.595+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][GET][/rest/tasks/taskBoard][?fromNewest=true&type=&_psip=127.0.0.1]
Hibernate: select t1_0.id,t1_0.assigned_date,t1_0.customer_id,t1_0.deadline,t1_0.freelancer_id,t1_0.payment,t1_0.posted_date,t1_0.problem,t1_0.solution_id,t1_0.status,t1_0.submitted_date,t1_0.title,t1_0.type from task t1_0 where t1_0.status=? order by t1_0.posted_date desc
]]></system-out>
  </testcase>
  <testcase name="assignFreelancerByAdminReturnsStatusForbidden" classname="freelanceplatform.controllers.TaskControllerTest" time="0.165">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:58.715+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":12,"username":"username-949011177","firstName":"firstname-1890335855","lastName":"lastname212829989","email":"email362594971","password":"$2a$10$q8UYsUOoU805rillmwZ91uEJbZJrSMXLHwIGcXKPVlCfkXXXA.4MG","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:58.794+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":13,"username":"username1594374913","firstName":"firstname-874914834","lastName":"lastname-1394760184","email":"email1553549031","password":"$2a$10$roVXuxhiVgQmw.A6Mh/uS.51K/VAzqECQ2fF2R6CqHcsApk8Nb7qC","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:55:58.795+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][POST][/rest/tasks/posted/1/proposals/1][?&_psip=127.0.0.1]
]]></system-out>
  </testcase>
  <testcase name="saveByGuestReturnsStatusForbidden" classname="freelanceplatform.controllers.TaskControllerTest" time="0.187">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:58.887+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":14,"username":"username-785734694","firstName":"firstname610786858","lastName":"lastname760602524","email":"email2135158675","password":"$2a$10$mt7okMfSLVcr1KkZp.fqKeiM4YGSTsDVjn5IEpvs8nr1EsdsvUx4C","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:58.975+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":15,"username":"username1825853418","firstName":"firstname677017931","lastName":"lastname289820193","email":"email948341844","password":"$2a$10$jdOdKateETipaal6pEl8..qUH.WK40Z9LhqkEISvYOWmQgKf/fo3y","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:55:58.978+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][POST][/rest/tasks][?&_psip=127.0.0.1]
]]></system-out>
  </testcase>
  <testcase name="getByIdReturnsStatusOk" classname="freelanceplatform.controllers.TaskControllerTest" time="0.255">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:59.072+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":16,"username":"username-445466850","firstName":"firstname-1506506292","lastName":"lastname1650787286","email":"email-1803259132","password":"$2a$10$sNwxdG7fGWLHPGxpFA03QOR9L88V2ZYVfLUWhr9Z1zVV9mY8Dw1KO","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:59.152+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":17,"username":"username-279054817","firstName":"firstname-1938434875","lastName":"lastname-1112896272","email":"email-396440893","password":"$2a$10$Uay.Dfc1d7hP0/nWAT.SUe6FGK5NwjG7mT3L9VOrTO/gJWIMhtRR2","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:55:59.153+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][GET][/rest/tasks/1][?&_psip=127.0.0.1]
&amp#27;[2m2024-06-27T15:55:59.171+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mc.h.i.p.impl.PartitionStateManager      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [192.168.68.1]:5701 [dev] [5.3.6] Initializing cluster partition table arrangement...
&amp#27;[2m2024-06-27T15:55:59.205+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mfreelanceplatform.services.TaskService  &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Get task by id 1.
Hibernate: select t1_0.id,t1_0.assigned_date,t1_0.customer_id,c1_0.id,c1_0.email,c1_0.first_name,c1_0.last_name,c1_0.password,c1_0.rating,c1_0.role,c1_0.username,t1_0.deadline,f1_0.id,f1_0.email,f1_0.first_name,f1_0.last_name,f1_0.password,f1_0.rating,f1_0.role,f1_0.username,t1_0.payment,t1_0.posted_date,t1_0.problem,s1_0.id,s1_0.description,s1_0.link,t1_0.status,t1_0.submitted_date,t1_0.title,t1_0.type from task t1_0 join users c1_0 on c1_0.id=t1_0.customer_id left join users f1_0 on f1_0.id=t1_0.freelancer_id left join solution s1_0 on s1_0.id=t1_0.solution_id where t1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="getAllTakenReturnsTasksWithMatchingFreelancerUsernameAndStatusOk" classname="freelanceplatform.controllers.TaskControllerTest" time="0.193">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:59.325+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":18,"username":"username2103379101","firstName":"firstname-361869203","lastName":"lastname-283775450","email":"email1077956669","password":"$2a$10$GRn6Axlv5rx2or70UNHxb.Zc7bbdWdcmkXJGjQwf7XHQfls7yy0fG","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:59.407+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":19,"username":"username8642656","firstName":"firstname-1498711644","lastName":"lastname-633430877","email":"email991098757","password":"$2a$10$PxEzgUnwFpciPDg5ZXNeTOYj8dAf1zuEEfv5sfSw1rFJUWNmNTIyO","rating":0,"role":"USER"}
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:59.424+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][GET][/rest/tasks/taken][?expired=false&_psip=127.0.0.1]
Hibernate: select t1_0.id,t1_0.assigned_date,t1_0.customer_id,t1_0.deadline,t1_0.freelancer_id,t1_0.payment,t1_0.posted_date,t1_0.problem,t1_0.solution_id,t1_0.status,t1_0.submitted_date,t1_0.title,t1_0.type from task t1_0 where t1_0.freelancer_id=? and t1_0.deadline>localtimestamp
]]></system-out>
  </testcase>
  <testcase name="updateByGuestReturnsStatusForbidden" classname="freelanceplatform.controllers.TaskControllerTest" time="0.212">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:59.523+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":20,"username":"username-1550635843","firstName":"firstname369884537","lastName":"lastname1016138020","email":"email137735053","password":"$2a$10$oTyHkLMTcvVgpb7qreGhoe8sX0It57LU5We3kLelYYkptXff9HBlK","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:59.603+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":21,"username":"username219551517","firstName":"firstname2091246836","lastName":"lastname-1599311648","email":"email805779599","password":"$2a$10$TSbK8CQQfLsHFsgopihacuL62a10xFm7UpT1WchTN6galQsox8LZC","rating":0,"role":"USER"}
Hibernate: select t1_0.id,t1_0.assigned_date,t1_0.customer_id,c1_0.id,c1_0.email,c1_0.first_name,c1_0.last_name,c1_0.password,c1_0.rating,c1_0.role,c1_0.username,p1_0.freelancer_id,p1_0.id,p1_0.task_id,t2_0.id,t2_0.assigned_date,t2_0.customer_id,t2_0.deadline,f2_0.id,f2_0.email,f2_0.first_name,f2_0.last_name,f2_0.password,f2_0.rating,f2_0.role,f2_0.username,t2_0.payment,t2_0.posted_date,t2_0.problem,s1_0.id,s1_0.description,s1_0.link,t2_0.status,t2_0.submitted_date,t2_0.title,t2_0.type,t1_0.deadline,f3_0.id,f3_0.email,f3_0.first_name,f3_0.last_name,f3_0.password,f3_0.rating,f3_0.role,f3_0.username,t1_0.payment,t1_0.posted_date,t1_0.problem,s2_0.id,s2_0.description,s2_0.link,t1_0.status,t1_0.submitted_date,t1_0.title,t1_0.type from task t1_0 join users c1_0 on c1_0.id=t1_0.customer_id left join proposal p1_0 on c1_0.id=p1_0.freelancer_id left join task t2_0 on t2_0.id=p1_0.task_id left join users f2_0 on f2_0.id=t2_0.freelancer_id left join solution s1_0 on s1_0.id=t2_0.solution_id left join users f3_0 on f3_0.id=t1_0.freelancer_id left join solution s2_0 on s2_0.id=t1_0.solution_id where t1_0.id=?
Hibernate: select tt1_0.freelancer_id,tt1_0.id,tt1_0.assigned_date,tt1_0.customer_id,c1_0.id,c1_0.email,c1_0.first_name,c1_0.last_name,c1_0.password,c1_0.rating,c1_0.role,c1_0.username,tt1_0.deadline,tt1_0.payment,tt1_0.posted_date,tt1_0.problem,s1_0.id,s1_0.description,s1_0.link,tt1_0.status,tt1_0.submitted_date,tt1_0.title,tt1_0.type from task tt1_0 left join users c1_0 on c1_0.id=tt1_0.customer_id left join solution s1_0 on s1_0.id=tt1_0.solution_id where tt1_0.freelancer_id=?
Hibernate: select sf1_0.from_user_id,sf1_0.id,sf1_0.comment,sf1_0.rating,r1_0.id,r1_0.email,r1_0.first_name,r1_0.last_name,r1_0.password,r1_0.rating,r1_0.role,r1_0.username from feedback sf1_0 left join users r1_0 on r1_0.id=sf1_0.to_user_id where sf1_0.from_user_id=?
Hibernate: select rf1_0.to_user_id,rf1_0.id,rf1_0.comment,rf1_0.rating,s1_0.id,s1_0.email,s1_0.first_name,s1_0.last_name,s1_0.password,s1_0.rating,s1_0.role,s1_0.username from feedback rf1_0 left join users s1_0 on s1_0.id=rf1_0.from_user_id where rf1_0.to_user_id=?
Hibernate: select p1_0.freelancer_id,p1_0.id,p1_0.task_id,t1_0.id,t1_0.assigned_date,t1_0.customer_id,c1_0.id,c1_0.email,c1_0.first_name,c1_0.last_name,c1_0.password,c1_0.rating,c1_0.role,c1_0.username,t1_0.deadline,f2_0.id,f2_0.email,f2_0.first_name,f2_0.last_name,f2_0.password,f2_0.rating,f2_0.role,f2_0.username,t1_0.payment,t1_0.posted_date,t1_0.problem,s1_0.id,s1_0.description,s1_0.link,t1_0.status,t1_0.submitted_date,t1_0.title,t1_0.type from proposal p1_0 left join task t1_0 on t1_0.id=p1_0.task_id left join users c1_0 on c1_0.id=t1_0.customer_id left join users f2_0 on f2_0.id=t1_0.freelancer_id left join solution s1_0 on s1_0.id=t1_0.solution_id where p1_0.freelancer_id=?
Hibernate: select pt1_0.customer_id,pt1_0.id,pt1_0.assigned_date,pt1_0.deadline,f1_0.id,f1_0.email,f1_0.first_name,f1_0.last_name,f1_0.password,f1_0.rating,f1_0.role,f1_0.username,pt1_0.payment,pt1_0.posted_date,pt1_0.problem,s1_0.id,s1_0.description,s1_0.link,pt1_0.status,pt1_0.submitted_date,pt1_0.title,pt1_0.type from task pt1_0 left join users f1_0 on f1_0.id=pt1_0.freelancer_id left join solution s1_0 on s1_0.id=pt1_0.solution_id where pt1_0.customer_id=?
Hibernate: select tt1_0.freelancer_id,tt1_0.id,tt1_0.assigned_date,tt1_0.customer_id,c1_0.id,c1_0.email,c1_0.first_name,c1_0.last_name,c1_0.password,c1_0.rating,c1_0.role,c1_0.username,tt1_0.deadline,tt1_0.payment,tt1_0.posted_date,tt1_0.problem,s1_0.id,s1_0.description,s1_0.link,tt1_0.status,tt1_0.submitted_date,tt1_0.title,tt1_0.type from task tt1_0 left join users c1_0 on c1_0.id=tt1_0.customer_id left join solution s1_0 on s1_0.id=tt1_0.solution_id where tt1_0.freelancer_id=?
Hibernate: select sf1_0.from_user_id,sf1_0.id,sf1_0.comment,sf1_0.rating,r1_0.id,r1_0.email,r1_0.first_name,r1_0.last_name,r1_0.password,r1_0.rating,r1_0.role,r1_0.username from feedback sf1_0 left join users r1_0 on r1_0.id=sf1_0.to_user_id where sf1_0.from_user_id=?
Hibernate: select rf1_0.to_user_id,rf1_0.id,rf1_0.comment,rf1_0.rating,s1_0.id,s1_0.email,s1_0.first_name,s1_0.last_name,s1_0.password,s1_0.rating,s1_0.role,s1_0.username from feedback rf1_0 left join users s1_0 on s1_0.id=rf1_0.from_user_id where rf1_0.to_user_id=?
Hibernate: select pt1_0.customer_id,pt1_0.id,pt1_0.assigned_date,pt1_0.deadline,f1_0.id,f1_0.email,f1_0.first_name,f1_0.last_name,f1_0.password,f1_0.rating,f1_0.role,f1_0.username,pt1_0.payment,pt1_0.posted_date,pt1_0.problem,s1_0.id,s1_0.description,s1_0.link,pt1_0.status,pt1_0.submitted_date,pt1_0.title,pt1_0.type from task pt1_0 left join users f1_0 on f1_0.id=pt1_0.freelancer_id left join solution s1_0 on s1_0.id=pt1_0.solution_id where pt1_0.customer_id=?
&amp#27;[2m2024-06-27T15:55:59.639+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - Task test1 create
&amp#27;[2m2024-06-27T15:55:59.644+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][PUT][/rest/tasks/posted/1][?&_psip=127.0.0.1]
]]></system-out>
  </testcase>
  <testcase name="saveByUserReturnsStatusCreated" classname="freelanceplatform.controllers.TaskControllerTest" time="0.183">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:59.730+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":22,"username":"username753110724","firstName":"firstname2091867754","lastName":"lastname1804820463","email":"email2011107799","password":"$2a$10$Hb8fSKUl4/f53tt.h4yqj.O3hZCzeas4QztwTBxIB0rKaoGNO.TAi","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:59.811+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":23,"username":"username842715855","firstName":"firstname-410004820","lastName":"lastname1899557063","email":"email-821575888","password":"$2a$10$pgJLI0QgOvOF9kUkbWkNSeq3.osj1qV4FCr9yN/Bojoyo9Muwz.z.","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:55:59.812+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][POST][/rest/tasks][?&_psip=127.0.0.1]
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:59.828+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - Task title2074497200 create
]]></system-out>
  </testcase>
  <testcase name="updateByAdminReturnsStatusForbidden" classname="freelanceplatform.controllers.TaskControllerTest" time="0.212">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:59.916+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":24,"username":"username-1868015630","firstName":"firstname-820098900","lastName":"lastname-1938104544","email":"email1296848519","password":"$2a$10$4yGk9KveULSLNzYpamYc1OfZvd27fVTMmYJ5k5ap1jfebMUHK0LuK","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:55:59.996+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":25,"username":"username-1117964185","firstName":"firstname-1213677596","lastName":"lastname-1805586552","email":"email729542044","password":"$2a$10$QE8rRKFqHpHCO6/Djq5obOJpGDMZLhQig3knThhqm63BBclV99olC","rating":0,"role":"USER"}
Hibernate: select t1_0.id,t1_0.assigned_date,t1_0.customer_id,c1_0.id,c1_0.email,c1_0.first_name,c1_0.last_name,c1_0.password,c1_0.rating,c1_0.role,c1_0.username,p1_0.freelancer_id,p1_0.id,p1_0.task_id,t2_0.id,t2_0.assigned_date,t2_0.customer_id,t2_0.deadline,f2_0.id,f2_0.email,f2_0.first_name,f2_0.last_name,f2_0.password,f2_0.rating,f2_0.role,f2_0.username,t2_0.payment,t2_0.posted_date,t2_0.problem,s1_0.id,s1_0.description,s1_0.link,t2_0.status,t2_0.submitted_date,t2_0.title,t2_0.type,t1_0.deadline,f3_0.id,f3_0.email,f3_0.first_name,f3_0.last_name,f3_0.password,f3_0.rating,f3_0.role,f3_0.username,t1_0.payment,t1_0.posted_date,t1_0.problem,s2_0.id,s2_0.description,s2_0.link,t1_0.status,t1_0.submitted_date,t1_0.title,t1_0.type from task t1_0 join users c1_0 on c1_0.id=t1_0.customer_id left join proposal p1_0 on c1_0.id=p1_0.freelancer_id left join task t2_0 on t2_0.id=p1_0.task_id left join users f2_0 on f2_0.id=t2_0.freelancer_id left join solution s1_0 on s1_0.id=t2_0.solution_id left join users f3_0 on f3_0.id=t1_0.freelancer_id left join solution s2_0 on s2_0.id=t1_0.solution_id where t1_0.id=?
Hibernate: select tt1_0.freelancer_id,tt1_0.id,tt1_0.assigned_date,tt1_0.customer_id,c1_0.id,c1_0.email,c1_0.first_name,c1_0.last_name,c1_0.password,c1_0.rating,c1_0.role,c1_0.username,tt1_0.deadline,tt1_0.payment,tt1_0.posted_date,tt1_0.problem,s1_0.id,s1_0.description,s1_0.link,tt1_0.status,tt1_0.submitted_date,tt1_0.title,tt1_0.type from task tt1_0 left join users c1_0 on c1_0.id=tt1_0.customer_id left join solution s1_0 on s1_0.id=tt1_0.solution_id where tt1_0.freelancer_id=?
Hibernate: select sf1_0.from_user_id,sf1_0.id,sf1_0.comment,sf1_0.rating,r1_0.id,r1_0.email,r1_0.first_name,r1_0.last_name,r1_0.password,r1_0.rating,r1_0.role,r1_0.username from feedback sf1_0 left join users r1_0 on r1_0.id=sf1_0.to_user_id where sf1_0.from_user_id=?
Hibernate: select rf1_0.to_user_id,rf1_0.id,rf1_0.comment,rf1_0.rating,s1_0.id,s1_0.email,s1_0.first_name,s1_0.last_name,s1_0.password,s1_0.rating,s1_0.role,s1_0.username from feedback rf1_0 left join users s1_0 on s1_0.id=rf1_0.from_user_id where rf1_0.to_user_id=?
Hibernate: select p1_0.freelancer_id,p1_0.id,p1_0.task_id,t1_0.id,t1_0.assigned_date,t1_0.customer_id,c1_0.id,c1_0.email,c1_0.first_name,c1_0.last_name,c1_0.password,c1_0.rating,c1_0.role,c1_0.username,t1_0.deadline,f2_0.id,f2_0.email,f2_0.first_name,f2_0.last_name,f2_0.password,f2_0.rating,f2_0.role,f2_0.username,t1_0.payment,t1_0.posted_date,t1_0.problem,s1_0.id,s1_0.description,s1_0.link,t1_0.status,t1_0.submitted_date,t1_0.title,t1_0.type from proposal p1_0 left join task t1_0 on t1_0.id=p1_0.task_id left join users c1_0 on c1_0.id=t1_0.customer_id left join users f2_0 on f2_0.id=t1_0.freelancer_id left join solution s1_0 on s1_0.id=t1_0.solution_id where p1_0.freelancer_id=?
Hibernate: select pt1_0.customer_id,pt1_0.id,pt1_0.assigned_date,pt1_0.deadline,f1_0.id,f1_0.email,f1_0.first_name,f1_0.last_name,f1_0.password,f1_0.rating,f1_0.role,f1_0.username,pt1_0.payment,pt1_0.posted_date,pt1_0.problem,s1_0.id,s1_0.description,s1_0.link,pt1_0.status,pt1_0.submitted_date,pt1_0.title,pt1_0.type from task pt1_0 left join users f1_0 on f1_0.id=pt1_0.freelancer_id left join solution s1_0 on s1_0.id=pt1_0.solution_id where pt1_0.customer_id=?
Hibernate: select tt1_0.freelancer_id,tt1_0.id,tt1_0.assigned_date,tt1_0.customer_id,c1_0.id,c1_0.email,c1_0.first_name,c1_0.last_name,c1_0.password,c1_0.rating,c1_0.role,c1_0.username,tt1_0.deadline,tt1_0.payment,tt1_0.posted_date,tt1_0.problem,s1_0.id,s1_0.description,s1_0.link,tt1_0.status,tt1_0.submitted_date,tt1_0.title,tt1_0.type from task tt1_0 left join users c1_0 on c1_0.id=tt1_0.customer_id left join solution s1_0 on s1_0.id=tt1_0.solution_id where tt1_0.freelancer_id=?
Hibernate: select sf1_0.from_user_id,sf1_0.id,sf1_0.comment,sf1_0.rating,r1_0.id,r1_0.email,r1_0.first_name,r1_0.last_name,r1_0.password,r1_0.rating,r1_0.role,r1_0.username from feedback sf1_0 left join users r1_0 on r1_0.id=sf1_0.to_user_id where sf1_0.from_user_id=?
Hibernate: select rf1_0.to_user_id,rf1_0.id,rf1_0.comment,rf1_0.rating,s1_0.id,s1_0.email,s1_0.first_name,s1_0.last_name,s1_0.password,s1_0.rating,s1_0.role,s1_0.username from feedback rf1_0 left join users s1_0 on s1_0.id=rf1_0.from_user_id where rf1_0.to_user_id=?
Hibernate: select pt1_0.customer_id,pt1_0.id,pt1_0.assigned_date,pt1_0.deadline,f1_0.id,f1_0.email,f1_0.first_name,f1_0.last_name,f1_0.password,f1_0.rating,f1_0.role,f1_0.username,pt1_0.payment,pt1_0.posted_date,pt1_0.problem,s1_0.id,s1_0.description,s1_0.link,pt1_0.status,pt1_0.submitted_date,pt1_0.title,pt1_0.type from task pt1_0 left join users f1_0 on f1_0.id=pt1_0.freelancer_id left join solution s1_0 on s1_0.id=pt1_0.solution_id where pt1_0.customer_id=?
&amp#27;[2m2024-06-27T15:56:00.036+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - Task test1 create
&amp#27;[2m2024-06-27T15:56:00.041+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][PUT][/rest/tasks/posted/1][?&_psip=127.0.0.1]
]]></system-out>
  </testcase>
  <testcase name="sendOnReviewByGuestReturnsStatusForbidden" classname="freelanceplatform.controllers.TaskControllerTest" time="0.169">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:00.128+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":26,"username":"username355786252","firstName":"firstname752900879","lastName":"lastname818569607","email":"email1272800421","password":"$2a$10$3E/xrvoCPJKIdnIjS/G.XeX65wkmqn7cNuQqWtevHhCKFJSfKOH3C","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:00.209+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":27,"username":"username-320965939","firstName":"firstname841016034","lastName":"lastname1011413354","email":"email-1894120775","password":"$2a$10$3MqTSDoo2CtsE.Vq/Q2eqO.foYMWtyQWywu8PpEmr1EYHvXOQ65qy","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:56:00.211+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][POST][/rest/tasks/taken/1][?&_psip=127.0.0.1]
]]></system-out>
  </testcase>
  <testcase name="deleteReturnsNotFoundForWrongId" classname="freelanceplatform.controllers.TaskControllerTest" time="0.166">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:00.295+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":28,"username":"username-1809901635","firstName":"firstname1096868761","lastName":"lastname-1848412422","email":"email-1291887158","password":"$2a$10$s/9UyO08D.Ciz.g3kYqcF.CfhNR.vX4vVXHBWyBw/JfLyoP2RR6m6","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:00.374+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":29,"username":"username-856475679","firstName":"firstname-1759646593","lastName":"lastname-1534202674","email":"email1014725171","password":"$2a$10$LS/HIJLBz2QkzQ6/PQWx4uw3OoJUP3ekflhxHmhi0lw8woiE385DW","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:56:00.376+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][DELETE][/rest/tasks/posted/-1][?&_psip=127.0.0.1]
&amp#27;[2m2024-06-27T15:56:00.376+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mfreelanceplatform.services.TaskService  &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Get task by id -1.
Hibernate: select t1_0.id,t1_0.assigned_date,t1_0.customer_id,c1_0.id,c1_0.email,c1_0.first_name,c1_0.last_name,c1_0.password,c1_0.rating,c1_0.role,c1_0.username,t1_0.deadline,f1_0.id,f1_0.email,f1_0.first_name,f1_0.last_name,f1_0.password,f1_0.rating,f1_0.role,f1_0.username,t1_0.payment,t1_0.posted_date,t1_0.problem,s1_0.id,s1_0.description,s1_0.link,t1_0.status,t1_0.submitted_date,t1_0.title,t1_0.type from task t1_0 join users c1_0 on c1_0.id=t1_0.customer_id left join users f1_0 on f1_0.id=t1_0.freelancer_id left join solution s1_0 on s1_0.id=t1_0.solution_id where t1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="acceptByGuestReturnsStatusForbidden" classname="freelanceplatform.controllers.TaskControllerTest" time="0.165">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:00.464+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":30,"username":"username-371255322","firstName":"firstname1108148317","lastName":"lastname991306766","email":"email-1489561479","password":"$2a$10$suE9FwRg6lFk4R6SouJzu.bPeP9TB8.Q9koPV3AzwtAZtkcRyc4F2","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:00.543+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":31,"username":"username-131668762","firstName":"firstname867731855","lastName":"lastname1045398999","email":"email-60328300","password":"$2a$10$z7rkxlsNuE9GIt9WfY4iMOnS6Eq4pHxNZdyVuDxjXZbK/O8z5iZl2","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:56:00.544+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][POST][/rest/tasks/posted/1/accept][?&_psip=127.0.0.1]
]]></system-out>
  </testcase>
  <testcase name="sendOnReviewByUserReturnsStatusNoContent" classname="freelanceplatform.controllers.TaskControllerTest" time="0.194">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:00.627+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":32,"username":"username670881757","firstName":"firstname-1847274898","lastName":"lastname1619785687","email":"email1243674839","password":"$2a$10$hIzFjDJ/JlPnLi6sm2R4uucfsznloOLc5h60x4iGZ//J7pLys3xha","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:00.708+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":33,"username":"username-1503683659","firstName":"firstname260070364","lastName":"lastname1536897893","email":"email442019866","password":"$2a$10$Vzov7PSk5eM70kbaxnyC2eOLQBvC5jIsYn.hE7AVRTX1o2SJl6fbG","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:56:00.709+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][POST][/rest/tasks/taken/1][?&_psip=127.0.0.1]
Hibernate: select t1_0.id,t1_0.assigned_date,t1_0.customer_id,c1_0.id,c1_0.email,c1_0.first_name,c1_0.last_name,c1_0.password,c1_0.rating,c1_0.role,c1_0.username,p1_0.freelancer_id,p1_0.id,p1_0.task_id,t2_0.id,t2_0.assigned_date,t2_0.customer_id,t2_0.deadline,f2_0.id,f2_0.email,f2_0.first_name,f2_0.last_name,f2_0.password,f2_0.rating,f2_0.role,f2_0.username,t2_0.payment,t2_0.posted_date,t2_0.problem,s1_0.id,s1_0.description,s1_0.link,t2_0.status,t2_0.submitted_date,t2_0.title,t2_0.type,t1_0.deadline,f3_0.id,f3_0.email,f3_0.first_name,f3_0.last_name,f3_0.password,f3_0.rating,f3_0.role,f3_0.username,t1_0.payment,t1_0.posted_date,t1_0.problem,s2_0.id,s2_0.description,s2_0.link,t1_0.status,t1_0.submitted_date,t1_0.title,t1_0.type from task t1_0 join users c1_0 on c1_0.id=t1_0.customer_id left join proposal p1_0 on c1_0.id=p1_0.freelancer_id left join task t2_0 on t2_0.id=p1_0.task_id left join users f2_0 on f2_0.id=t2_0.freelancer_id left join solution s1_0 on s1_0.id=t2_0.solution_id left join users f3_0 on f3_0.id=t1_0.freelancer_id left join solution s2_0 on s2_0.id=t1_0.solution_id where t1_0.id=?
Hibernate: select tt1_0.freelancer_id,tt1_0.id,tt1_0.assigned_date,tt1_0.customer_id,c1_0.id,c1_0.email,c1_0.first_name,c1_0.last_name,c1_0.password,c1_0.rating,c1_0.role,c1_0.username,tt1_0.deadline,tt1_0.payment,tt1_0.posted_date,tt1_0.problem,s1_0.id,s1_0.description,s1_0.link,tt1_0.status,tt1_0.submitted_date,tt1_0.title,tt1_0.type from task tt1_0 left join users c1_0 on c1_0.id=tt1_0.customer_id left join solution s1_0 on s1_0.id=tt1_0.solution_id where tt1_0.freelancer_id=?
Hibernate: select sf1_0.from_user_id,sf1_0.id,sf1_0.comment,sf1_0.rating,r1_0.id,r1_0.email,r1_0.first_name,r1_0.last_name,r1_0.password,r1_0.rating,r1_0.role,r1_0.username from feedback sf1_0 left join users r1_0 on r1_0.id=sf1_0.to_user_id where sf1_0.from_user_id=?
Hibernate: select rf1_0.to_user_id,rf1_0.id,rf1_0.comment,rf1_0.rating,s1_0.id,s1_0.email,s1_0.first_name,s1_0.last_name,s1_0.password,s1_0.rating,s1_0.role,s1_0.username from feedback rf1_0 left join users s1_0 on s1_0.id=rf1_0.from_user_id where rf1_0.to_user_id=?
Hibernate: select p1_0.freelancer_id,p1_0.id,p1_0.task_id,t1_0.id,t1_0.assigned_date,t1_0.customer_id,c1_0.id,c1_0.email,c1_0.first_name,c1_0.last_name,c1_0.password,c1_0.rating,c1_0.role,c1_0.username,t1_0.deadline,f2_0.id,f2_0.email,f2_0.first_name,f2_0.last_name,f2_0.password,f2_0.rating,f2_0.role,f2_0.username,t1_0.payment,t1_0.posted_date,t1_0.problem,s1_0.id,s1_0.description,s1_0.link,t1_0.status,t1_0.submitted_date,t1_0.title,t1_0.type from proposal p1_0 left join task t1_0 on t1_0.id=p1_0.task_id left join users c1_0 on c1_0.id=t1_0.customer_id left join users f2_0 on f2_0.id=t1_0.freelancer_id left join solution s1_0 on s1_0.id=t1_0.solution_id where p1_0.freelancer_id=?
Hibernate: select pt1_0.customer_id,pt1_0.id,pt1_0.assigned_date,pt1_0.deadline,f1_0.id,f1_0.email,f1_0.first_name,f1_0.last_name,f1_0.password,f1_0.rating,f1_0.role,f1_0.username,pt1_0.payment,pt1_0.posted_date,pt1_0.problem,s1_0.id,s1_0.description,s1_0.link,pt1_0.status,pt1_0.submitted_date,pt1_0.title,pt1_0.type from task pt1_0 left join users f1_0 on f1_0.id=pt1_0.freelancer_id left join solution s1_0 on s1_0.id=pt1_0.solution_id where pt1_0.customer_id=?
Hibernate: select tt1_0.freelancer_id,tt1_0.id,tt1_0.assigned_date,tt1_0.customer_id,c1_0.id,c1_0.email,c1_0.first_name,c1_0.last_name,c1_0.password,c1_0.rating,c1_0.role,c1_0.username,tt1_0.deadline,tt1_0.payment,tt1_0.posted_date,tt1_0.problem,s1_0.id,s1_0.description,s1_0.link,tt1_0.status,tt1_0.submitted_date,tt1_0.title,tt1_0.type from task tt1_0 left join users c1_0 on c1_0.id=tt1_0.customer_id left join solution s1_0 on s1_0.id=tt1_0.solution_id where tt1_0.freelancer_id=?
Hibernate: select sf1_0.from_user_id,sf1_0.id,sf1_0.comment,sf1_0.rating,r1_0.id,r1_0.email,r1_0.first_name,r1_0.last_name,r1_0.password,r1_0.rating,r1_0.role,r1_0.username from feedback sf1_0 left join users r1_0 on r1_0.id=sf1_0.to_user_id where sf1_0.from_user_id=?
Hibernate: select rf1_0.to_user_id,rf1_0.id,rf1_0.comment,rf1_0.rating,s1_0.id,s1_0.email,s1_0.first_name,s1_0.last_name,s1_0.password,s1_0.rating,s1_0.role,s1_0.username from feedback rf1_0 left join users s1_0 on s1_0.id=rf1_0.from_user_id where rf1_0.to_user_id=?
Hibernate: select pt1_0.customer_id,pt1_0.id,pt1_0.assigned_date,pt1_0.deadline,f1_0.id,f1_0.email,f1_0.first_name,f1_0.last_name,f1_0.password,f1_0.rating,f1_0.role,f1_0.username,pt1_0.payment,pt1_0.posted_date,pt1_0.problem,s1_0.id,s1_0.description,s1_0.link,pt1_0.status,pt1_0.submitted_date,pt1_0.title,pt1_0.type from task pt1_0 left join users f1_0 on f1_0.id=pt1_0.freelancer_id left join solution s1_0 on s1_0.id=pt1_0.solution_id where pt1_0.customer_id=?
]]></system-out>
  </testcase>
  <testcase name="sendOnReviewByAdminReturnsStatusForbidden" classname="freelanceplatform.controllers.TaskControllerTest" time="0.169">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:00.825+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":34,"username":"username-1067100484","firstName":"firstname-1190994819","lastName":"lastname-1306066996","email":"email-1948956047","password":"$2a$10$/IU6BvPrIVaXmtI/S5uy1ONla7u/Q0sMatENl1txU/s4/YWj8Urwq","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:00.906+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":35,"username":"username-1382739793","firstName":"firstname46727163","lastName":"lastname106853766","email":"email-741666208","password":"$2a$10$HqTUpou608tIHaPeorAjQupeJwoZ9bj/rd89qQ64JsCQtlhEOTMZW","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:56:00.908+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][POST][/rest/tasks/taken/1][?&_psip=127.0.0.1]
]]></system-out>
  </testcase>
  <testcase name="getAllPostedReturnsTasksWithMatchingCustomerUsernameAndStatusOk" classname="freelanceplatform.controllers.TaskControllerTest" time="0.184">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:00.991+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":36,"username":"username1581557179","firstName":"firstname2024930833","lastName":"lastname-1795655671","email":"email1279797308","password":"$2a$10$fnyy87Gzf1bCWA8/gcuI0..za0T58JAbdA2BQBUdkmO9oOV.Iq.Se","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:01.071+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":37,"username":"username-358443822","firstName":"firstname-1382408257","lastName":"lastname-1203917788","email":"email180878249","password":"$2a$10$1xjV3HFXsJ5x0p742JNSHu/k0gYoHI7kJ/hjIPQwEpD4P5CLK.tYy","rating":0,"role":"USER"}
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:01.085+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][GET][/rest/tasks/posted][?expired=false&_psip=127.0.0.1]
Hibernate: select t1_0.id,t1_0.assigned_date,t1_0.customer_id,t1_0.deadline,t1_0.freelancer_id,t1_0.payment,t1_0.posted_date,t1_0.problem,t1_0.solution_id,t1_0.status,t1_0.submitted_date,t1_0.title,t1_0.type from task t1_0 where t1_0.customer_id=? and t1_0.deadline>localtimestamp
]]></system-out>
  </testcase>
  <testcase name="removeFreelancerByGuestReturnsStatusForbidden" classname="freelanceplatform.controllers.TaskControllerTest" time="0.167">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:01.177+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":38,"username":"username1845779542","firstName":"firstname199473620","lastName":"lastname1053135253","email":"email1307577885","password":"$2a$10$opma4CUHLkeN.Gzm05zF9eAo3fbOFaL.X8GZ5CIbcL3V2NyLTrbqy","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:01.259+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":39,"username":"username920281534","firstName":"firstname-2044759634","lastName":"lastname416727608","email":"email-1965226072","password":"$2a$10$qIlG1KcofMyX.bOinneHzOUkZAgnsByz9JNEjxszN9byICfr7J0G2","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:56:01.261+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][POST][/rest/tasks/1][?&_psip=127.0.0.1]
]]></system-out>
  </testcase>
  <testcase name="acceptByAdminReturnsStatusForbidden" classname="freelanceplatform.controllers.TaskControllerTest" time="0.166">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:01.344+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":40,"username":"username-1982643011","firstName":"firstname1939382502","lastName":"lastname-475794062","email":"email-702143101","password":"$2a$10$68n5enJXTqAgV/j5TK2SzOv.mQ0UzI8vyPA9ICerm8/CCd9BirQZa","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:01.426+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":41,"username":"username1424216366","firstName":"firstname453249625","lastName":"lastname1675417924","email":"email215541376","password":"$2a$10$psZMUOMdJUo9uwe7RmdlaOJxriKgCL2YHkDlUzURVEIM3ANcqwM6W","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:56:01.428+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][POST][/rest/tasks/posted/1/accept][?&_psip=127.0.0.1]
]]></system-out>
  </testcase>
  <testcase name="attachSolutionByGuestReturnsStatusForbidden" classname="freelanceplatform.controllers.TaskControllerTest" time="0.187">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:01.518+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":42,"username":"username-1081309604","firstName":"firstname1883661499","lastName":"lastname-1709667090","email":"email700242684","password":"$2a$10$a73hM31qYrok/me03kKzLudlUiojHwmUE3w/BkFIIm/itqf0jVF3u","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:01.609+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":43,"username":"username-1282281996","firstName":"firstname1987929420","lastName":"lastname-946165352","email":"email-478188206","password":"$2a$10$3cVU2JePid/JTe1uUgGV.uMm/QgaJn8KMQOYRWl1wWZKm7xHSjIvm","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:56:01.612+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][POST][/rest/tasks/taken/1/attach-solution][?&_psip=127.0.0.1]
]]></system-out>
  </testcase>
  <testcase name="removeFreelancerByAdminReturnsStatusForbidden" classname="freelanceplatform.controllers.TaskControllerTest" time="0.17">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:01.700+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":44,"username":"username-615463228","firstName":"firstname695196978","lastName":"lastname-433035489","email":"email1733988719","password":"$2a$10$fvJCeo0cmCFB9SUIBTFb7uruAj16IUl75u0ggTVDYtW4CEfrQbZ9i","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:01.784+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":45,"username":"username-1617115761","firstName":"firstname172338035","lastName":"lastname-1162810951","email":"email1660427745","password":"$2a$10$4WSSiEXM0tSxRNtZvRRiseVyJFoAC6ELlxNoSa1WQnqotqwA9h7c6","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:56:01.786+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][POST][/rest/tasks/1][?&_psip=127.0.0.1]
]]></system-out>
  </testcase>
  <testcase name="saveByAdminReturnsStatusCreated" classname="freelanceplatform.controllers.TaskControllerTest" time="0.182">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:01.881+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":46,"username":"username948855794","firstName":"firstname1003396849","lastName":"lastname-1334610001","email":"email585136531","password":"$2a$10$0o22fqD4H6iHXbcA2i4l6O9ckKuguu07EnAHDmFUUeoqlevfztlzG","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:01.964+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":47,"username":"username1925731664","firstName":"firstname-1199839638","lastName":"lastname794901408","email":"email1695380070","password":"$2a$10$ZxpBB.C9zgOxwZHxeo2xN.0DcmiWTvTwhvimTf4QweXbLQ01oWvga","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:56:01.965+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][POST][/rest/tasks][?&_psip=127.0.0.1]
Hibernate: insert into task (assigned_date,customer_id,deadline,freelancer_id,payment,posted_date,problem,solution_id,status,submitted_date,title,type) values (?,?,?,?,?,?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:01.969+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - Task title253583005 create
]]></system-out>
  </testcase>
  <testcase name="attachSolutionByAdminReturnsStatusForbidden" classname="freelanceplatform.controllers.TaskControllerTest" time="0.169">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:02.055+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":48,"username":"username-450347848","firstName":"firstname1324789211","lastName":"lastname723800634","email":"email1615337580","password":"$2a$10$Su/Qk9OsGIu23w8H50ak2.gFaypqmsvFDBrkFuHJ1CmMsZJNzJG2C","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:02.138+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":49,"username":"username1610882451","firstName":"firstname-643892417","lastName":"lastname1861246075","email":"email72477947","password":"$2a$10$JrHg56VxusOTOFv1JrWiEeAgI8aiWjjeL7WoUs0j1JcyRFbmP4vwe","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:56:02.140+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][POST][/rest/tasks/taken/1/attach-solution][?&_psip=127.0.0.1]
]]></system-out>
  </testcase>
  <testcase name="getByIdReturnsNotFoundForUnknownId" classname="freelanceplatform.controllers.TaskControllerTest" time="0.168">
    <system-out><![CDATA[Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:02.223+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":50,"username":"username-2103719005","firstName":"firstname-364217001","lastName":"lastname1397089971","email":"email-682635638","password":"$2a$10$zuAt602lh5vVfFETr1bgQ.60mWf.DYVB68vDfBFUQ/XARzxrxqRBe","rating":0,"role":"ADMIN"}
Hibernate: select u1_0.id from users u1_0 where u1_0.username=? fetch first ? rows only
Hibernate: insert into users (email,first_name,last_name,password,rating,role,username) values (?,?,?,?,?,?,?)
&amp#27;[2m2024-06-27T15:56:02.303+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.kafka.UserKafkaProducer               &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m event - {"id":51,"username":"username-67274591","firstName":"firstname-1075910548","lastName":"lastname329466328","email":"email-327520381","password":"$2a$10$fbyiWN4I9rbbjgfBPAhFFeE5EkGDJbCt7N4BwcjQvn9NOBuad5yW.","rating":0,"role":"USER"}
&amp#27;[2m2024-06-27T15:56:02.304+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mf.logging.LoggerInterceptor             &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m [preHandle][GET][/rest/tasks/-1][?&_psip=127.0.0.1]
&amp#27;[2m2024-06-27T15:56:02.305+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m36935&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[FreelancePlatform] [           main]&amp#27;[0;39m &amp#27;[2m&amp#27;[0;39m&amp#27;[36mfreelanceplatform.services.TaskService  &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Get task by id -1.
Hibernate: select t1_0.id,t1_0.assigned_date,t1_0.customer_id,c1_0.id,c1_0.email,c1_0.first_name,c1_0.last_name,c1_0.password,c1_0.rating,c1_0.role,c1_0.username,t1_0.deadline,f1_0.id,f1_0.email,f1_0.first_name,f1_0.last_name,f1_0.password,f1_0.rating,f1_0.role,f1_0.username,t1_0.payment,t1_0.posted_date,t1_0.problem,s1_0.id,s1_0.description,s1_0.link,t1_0.status,t1_0.submitted_date,t1_0.title,t1_0.type from task t1_0 join users c1_0 on c1_0.id=t1_0.customer_id left join users f1_0 on f1_0.id=t1_0.freelancer_id left join solution s1_0 on s1_0.id=t1_0.solution_id where t1_0.id=?
]]></system-out>
  </testcase>
</testsuite>